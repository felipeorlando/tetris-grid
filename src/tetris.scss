@import 'neat';
@import './mixins/media-querying';

$neat-grid: (
  columns: 12,
  gutter: 15px,
);

$breakpoints: (
	xs: 0,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px,
);

$containers: (
	xs: none,
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1140px,
);

// Containers
.container {
  @include grid-container;
  margin: 0 auto;
  width: 100%;

  @each $breakpoint, $value in $breakpoints {
    @if $value != 0 {
      @media screen and (min-width: $value) {
        max-width: map-get($containers, $breakpoint);
      }
    }
  }
}

// Default columns
.col {
  flex-grow: 1;
  flex-basis: 0;
  margin-left: 15px;

  &:first-child {
    margin-left: 0;
  }
}

[class*='col-'] {
  @include grid-column(12);
}

// Media Columns
%column {
  float: left;
  margin-left: map-get($neat-grid, gutter);
}

@each $breakpoint, $value in $breakpoints {
  @for $i from 1 through 12 {
    .col-#{$breakpoint}-#{$i} {
      @extend %column;
    }
  }
}

@each $breakpoint, $value in $breakpoints {
  @include media-querying($conditional: ($value != 0), $min-width: $value) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        width: calc(#{_neat-column-width($neat-grid, $i)});
      }
    }
  }
}


@each $breakpoint, $value in $breakpoints {
  @include media-querying($conditional: ($value != 0), $min-width: $value) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-offset-#{$i} {
        @include grid-push($i);
      }
    }
  }
}

// Row
.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
}

// Collapse
.collapse {
  @include grid-collapse;
}
