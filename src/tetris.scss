@import 'neat';
@import './mixins/media-querying';

$neat-grid: (
  columns: 12,
  gutter: 15px,
);

$breakpoints: (
	xs: 0px,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px,
);

$next-breakpoints: (
	xs: 576px,
	sm: 768px,
	md: 992px,
	lg: 1200px,
	xl: null,
);

$containers: (
	xs: 0px,
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1140px,
);

// Containers
.container {
  @include grid-container;
  box-sizing: border-box;
  margin: 0 auto;
  padding: 0 map-get($neat-grid, gutter);
  width: 100%;

  @each $breakpoint, $value in $breakpoints {
    @include media-querying(
      $breakpoint: $value,
      $min-width: $value,
      $max-width: map-get($next-breakpoints, $breakpoint)
    ) {
      @if map-get($containers, $breakpoint) != 0px {
        max-width: map-get($containers, $breakpoint);
      }
    }
  }

  // Fluid Containers
  @each $breakpoint, $value in $breakpoints {
    @include media-querying(
      $breakpoint: $value,
      $min-width: $value,
      $max-width: map-get($next-breakpoints, $breakpoint),
      $forces-media: true,
      $forces-max-width: true
    ) {
      &--fluid-#{$breakpoint} {
        max-width: 100%;
      }
    }
  }
}

// Default columns
.col {
  flex-basis: 0;
  flex-grow: 1;
  margin-left: map-get($neat-grid, gutter);

  &:first-child {
    margin-left: 0;
  }
}

[class*='col-'] {
  @include grid-column(12);
  box-sizing: border-box;
}

// Media Columns
%column {
  float: left;
  margin-left: map-get($neat-grid, gutter);
}

@each $breakpoint, $value in $breakpoints {
  @for $i from 1 through 12 {
    .col-#{$breakpoint}-#{$i} {
      @extend %column;
    }
  }
}

@each $breakpoint, $value in $breakpoints {
  @include media-querying($breakpoint: $value, $min-width: $value) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        width: calc(#{_neat-column-width($neat-grid, $i)});
      }
    }
  }
}

// Offsets
@each $breakpoint, $value in $breakpoints {
  @include media-querying($breakpoint: $value, $min-width: $value) {
    @for $i from 1 through 12 {
      .offset-#{$breakpoint}-#{$i} {
        @include grid-push($i);
      }
    }
  }
}

// Horizontal Alignment
@each $breakpoint, $value in $breakpoints {
  // Start Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .start-#{$breakpoint} {
      justify-content: flex-start;
      text-align: start;
    }
  }

  // Center Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .center-#{$breakpoint} {
      justify-content: center;
      text-align: center;
    }
  }

  // End Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .end-#{$breakpoint} {
      justify-content: flex-end;
      text-align: end;
    }
  }
}

// Vertical Alignment
@each $breakpoint, $value in $breakpoints {
  // Top Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .top-#{$breakpoint} {
      align-items: flex-start;
    }
  }

  // Middle Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .middle-#{$breakpoint} {
      align-items: center;
    }
  }

  // Bottom Flexbox Alignment
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .bottom-#{$breakpoint} {
      align-items: flex-end;
    }
  }
}

// Justify Alignments
@each $breakpoint, $value in $breakpoints {
  // Around Flexbox Distribution
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .around-#{$breakpoint} {
      justify-content: space-around;
    }
  }

  // Between Flexbox Distribution
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .between-#{$breakpoint} {
      justify-content: space-between;
    }
  }

  // No Justify Flexbox Distribution
  @include media-querying($breakpoint: $value, $min-width: $value) {
    .no-justify-#{$breakpoint} {
      justify-content: flex-start;
    }
  }
}

// Helper to hide elements
@each $breakpoint, $value in $breakpoints {
  @include media-querying(
    $breakpoint: $value,
    $min-width: $value,
    $max-width: map-get($next-breakpoints, $breakpoint),
    $forces-max-width: true
  ) {
    .hidden-#{$breakpoint} {
      display: none;
    }
  }
}

// Row
.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
}

// Collapse
.collapse {
  @include grid-collapse;
}
